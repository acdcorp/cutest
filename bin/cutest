#!/usr/bin/env ruby

if ARGV.empty?
  puts "usage: cutest [-r lib] [-v] file [-b (backtrace) [-p (pry rescue)]]"
  exit
end

require_relative "../lib/cutest"
require_relative "../lib/cutest/vendor/clap"

files = Clap.run ARGV,
  "-r"      => lambda { |file| require file },
  "-o"      => lambda { |name| cutest[:only] = name },
  "-s"      => lambda { |name| cutest[:scope] = name },
  "-b"      => lambda { cutest[:backtrace] = true },
  "-p"      => lambda { ENV['PRY_RESCUE'] = 'true'; cutest[:pry_rescue] = true },
  "-v"      => lambda { puts Cutest::VERSION }

if files.any?
  begin
    success = Cutest.run(Dir[*files])

    exit(1) unless success
  rescue ThreadError
    # Ignore this as it's caused by Process.waitall when using -p
  end
end
