#!/usr/bin/env ruby
# encoding: utf-8

ENV['RACK_ENV'] ||= 'test'

if ARGV.empty?
  puts "usage: cutest [-r lib] [-v] file [-b (backtrace) [-p (pry rescue)]]"
  exit
end

require "clap"
require_relative "../lib/cutest"

files = Clap.run ARGV,
  "-r"      => lambda { |file| require file },
  "-t"      => lambda { |name| cutest[:only] = name },
  "-s"      => lambda { |name| cutest[:scope] = name },
  "-a"      => lambda { cutest[:all_tests] = true },
  "-w"      => lambda { |name| cutest[:warnings] = true },
  "-b"      => lambda { cutest[:backtrace] = true },
  "-p"      => lambda {
    ENV['PRY_RESCUE'] = 'true'; cutest[:pry_rescue] = true
  },
  "-d"      => lambda {
    require 'pry'
    require 'awesome_print'
    ENV['PRY_RESCUE']   = 'true'
    cutest[:pry_rescue] = true
  },
  "-v"      => lambda { puts Cutest::VERSION }

if files.any?
  begin
    env      = '.env'
    rack_env = "#{env}.#{ENV['RACK_ENV']}"

    File.foreach env do |line|
      key, value = line.split "="
      ENV[key] = value.gsub('\n', '').strip
    end

    if File.file? rack_env
      File.foreach rack_env do |line|
        key, value = line.split "="
        ENV[key] = value.gsub('\n', '').strip
      end
    end

    Gem.clear_paths

    success = Cutest.run(Dir[*files])

    exit(1) unless success
  rescue ThreadError
    # Ignore this as it's caused by Process.waitall when using -p
  end
end
