#!/usr/bin/env ruby

require_relative "../lib/cutest"

if ARGV.empty?
  puts "usage: cutest [-r lib] [-v] file ..."
  exit
end

class Cutest

  # Clap: Command line argument parsing.
  # http://github.com/soveran/clap
  # http://rubygems.org/gems/clap
  class Clap
    VERSION = "0.0.2"

    attr :argv
    attr :opts

    def self.run(args, opts)
      new(args, opts).run
    end

    def initialize(argv, opts)
      @argv = argv.dup
      @opts = opts
    end

    def run
      args = []

      while argv.any?

        item = argv.shift
        flag = opts[item]

        if flag

          # Work around lambda semantics in 1.8.7.
          arity = [flag.arity, 0].max

          # Raise if there are not enough parameters
          # available for the flag.
          if argv.size < arity
            raise ArgumentError
          end

          # Call the lambda with N items from argv,
          # where N is the lambda's arity.
          flag.call(*argv.shift(arity))
        else

          # Collect the items that don't correspond to
          # flags.
          args << item
        end
      end

      args
    end
  end
end

files = Cutest::Clap.run ARGV,
  "-r"      => lambda { |file| require file },
  "-v"      => lambda { puts Cutest::VERSION }

if files.any?
  Cutest.run(Dir[*files])
end
